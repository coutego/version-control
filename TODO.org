#+title: Todo
#+TODO: TODO(t) MAYBE(m) | DONE(d) CANCELLED(c)

* Functionality
** DONE Make DB to use the hasher through a protocol instead of hardcoding it

** DONE Implement file-cat

** DONE Implement init [1/1]
- [X] Create the empty structure

** DONE Implement add [1/1]
- [X] Decide how to implement the index / stage area

** TODO Implement 'log' [1/2]
- [X] Only information as with option 'one-line'
- [ ] Full information, no other option

** TODO Implement 'status' [1/2]
- [X] Implement with no options, no files specified
- [ ] Implement with files specified

** TODO Implement 'diff' [0/2]
- [ ] Implement with no options, no files specified
  - [ ] For worktree vs HEAD
  - [ ] For worktree vs arbitrary
- [ ] Implement with files specified

** TODO Implement 'restore' [0/1]
- [ ] vc restore --staged <file-name>

** TODO Implement 'commit' [1/2]
- [X] Without branches
- [ ] With author and committer

** TODO Implement 'checkout' [2/3]
- [X] From hash
- [X] From branch
- [ ] Implement deletion of files

** TODO Implement branches [1/2]
- [X] Change commit to use references
- [ ] Check unchecked files will not be overwritten

** TODO Implement merge [0/2]
- [ ] Only when no files have changed in both branches
- [ ] Indicate just one big conflict for the whole file
* Bugfixes
** DONE New bug: added and committed file stays as 'new'
:LOGBOOK:
CLOCK: [2022-11-12 Sat 21:56]--[2022-11-12 Sat 22:04] =>  0:08
:END:
- Checked with 'test_avoid_new_after_commit'
*** Sample
coutego@laptop:~/tmp/bug-new$ vc add README.org
coutego@laptop:~/tmp/bug-new$ vc commit -m 'add README'
coutego@laptop:~/tmp/bug-new$ vc status
On branch *branches not implemented*
Changes to be committed:
  (use "vc restore --staged <file>..." to unstage)
        new file: README.org
** DONE vc init gives error if in a repo, but initializes anyway
:LOGBOOK:
CLOCK: [2022-11-12 Sat 22:08]--[2022-11-12 Sat 22:16] =>  0:08
:END:
*** Sample
coutego@laptop:~/tmp/bug-new$ vc init
Already on a repository. Aborting
Initialized empty VC repository in /home/pedro/tmp/bug-new/.vc
coutego@laptop:~/tmp/bug-new$

** DONE Show dirs in 'status' with a trailing slash
- Implemented in the command itself
:LOGBOOK:
CLOCK: [2022-11-12 Sat 22:46]--[2022-11-12 Sat 22:55] =>  0:09
:END:
*** Sample
############# vc #############
On branch *branches not implemented*
Changes to be committed:
  (use "vc restore --staged <file>..." to unstage)
        new: README.org

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .git
        TODO.org

############# git #############
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   README.org

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .vc/
        TODO.org
** DONE Make 'status' on empty branch show files in root dir
:LOGBOOK:
CLOCK: [2022-11-12 Sat 21:09]--[2022-11-12 Sat 21:24] =>  0:15
:END:
- Checked in 'test_detect_new_without_any_commit'
*** Sample
############# vc #############
On branch *branches not implemented*
############# git #############
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        README.org
        TODO.org

nothing added to commit but untracked files present (use "git add" to track)
** MAYBE Show summary changes in 'commit'
*** Sample
############# vc #############
############# git #############
[master (root-commit) 2630898] Initial import
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 README.org
** MAYBE Show colors in 'status'
** DONE Fix error: when adding file already commited with new changes, it doesn't show up
*** Sample
############# vc #############
On branch *branches not implemented*
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .git

############# git #############
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   README.org

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .vc/
** DONE Prevent files appearing as new and modified at the same time
*** Sample
pedro@Tuxedo:~/projects/python/version-control/debug$ g status
############# vc #############
On branch *branches not implemented*
Changes to be committed:
  (use "vc restore --staged <file>..." to unstage)
        new file: TODO.org
        modified: TODO.org

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .git
        README.org

############# git #############
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   TODO.org

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .vc/
        README.org
